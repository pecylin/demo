/*! For license information please see tsparticles.shape.rounded-rect.min.js.LICENSE.txt */
!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e(require("tsparticles-engine"));else if("function"==typeof define&&define.amd)define(["tsparticles-engine"],e);else{var o="object"==typeof exports?e(require("tsparticles-engine")):e(t.window);for(var r in o)("object"==typeof exports?exports:t)[r]=o[r]}}(this,(t=>(()=>{"use strict";var e={961:e=>{e.exports=t}},o={};function r(t){var i=o[t];if(void 0!==i)return i.exports;var n=o[t]={exports:{}};return e[t](n,n.exports,r),n.exports}r.d=(t,e)=>{for(var o in e)r.o(e,o)&&!r.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:e[o]})},r.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r.r=t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})};var i={};return(()=>{r.r(i),r.d(i,{loadRoundedRectShape:()=>n});var t=r(961);const e=Math.sqrt(2);class o{draw(t,o,r){const i=r/e,n=2*i,a=o.borderRadius??5;"roundRect"in t?t.roundRect(-i,-i,n,n,a):((t,e,o={topRight:4,bottomRight:4,bottomLeft:4,topLeft:4})=>{const{x:r,y:i,width:n,height:a}=e,p=r+n,d=i+a;t.moveTo(r+o.topLeft,i),t.lineTo(p-o.topRight,i),t.quadraticCurveTo(p,i,p,i+o.topRight),t.lineTo(p,i+a-o.bottomRight),t.quadraticCurveTo(p,d,p-o.bottomRight,d),t.lineTo(r+o.bottomLeft,d),t.quadraticCurveTo(r,d,r,d-o.bottomLeft),t.lineTo(r,i+o.topLeft),t.quadraticCurveTo(r,i,r+o.topLeft,i)})(t,{x:-i,y:-i,height:n,width:n},{topLeft:a,topRight:a,bottomLeft:a,bottomRight:a})}particleInit(e,o){const r=o.shapeData;o.borderRadius=(0,t.getRangeValue)(r?.radius??5)*e.retina.pixelRatio}}async function n(t,e=!0){await t.addShape("rounded-rect",new o,e)}})(),i})()));