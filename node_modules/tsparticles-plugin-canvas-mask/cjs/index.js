"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.loadCanvasMaskPlugin = void 0;
const CanvasMask_1 = require("./Options/Classes/CanvasMask");
const CanvasMaskInstance_1 = require("./CanvasMaskInstance");
class CanvasMaskPlugin {
    constructor(engine) {
        this.id = "canvasMask";
        this._engine = engine;
    }
    getPlugin(container) {
        return new CanvasMaskInstance_1.CanvasMaskInstance(container, this._engine);
    }
    loadOptions(options, source) {
        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {
            return;
        }
        let canvasMaskOptions = options.canvasMask;
        if (canvasMaskOptions?.load === undefined) {
            options.canvasMask = canvasMaskOptions = new CanvasMask_1.CanvasMask();
        }
        canvasMaskOptions.load(source?.canvasMask);
    }
    needsPlugin(options) {
        return options?.canvasMask?.enable ?? false;
    }
}
async function loadCanvasMaskPlugin(engine, refresh = true) {
    await engine.addPlugin(new CanvasMaskPlugin(engine), refresh);
}
exports.loadCanvasMaskPlugin = loadCanvasMaskPlugin;
