import { getRangeValue } from "tsparticles-engine";
export class SpiralDrawer {
    draw(context, particle, radius) {
        if (particle.spiralInnerRadius === undefined ||
            particle.spiralLineSpacing === undefined ||
            particle.spiralWidthFactor === undefined) {
            return;
        }
        const realWidth = (radius - particle.spiralInnerRadius) / particle.spiralLineSpacing, widthFactor = 10;
        for (let i = 0; i < realWidth * widthFactor; i++) {
            const angle = i / widthFactor, factor = particle.spiralInnerRadius + particle.spiralLineSpacing * angle, pos = {
                x: factor * Math.cos(angle),
                y: factor * Math.sin(angle),
            };
            context.lineTo(pos.x, pos.y);
        }
    }
    particleInit(container, particle) {
        const pixelRatio = container.retina.pixelRatio, shapeData = particle.shapeData;
        particle.spiralInnerRadius = getRangeValue(shapeData.innerRadius ?? 1) * pixelRatio;
        particle.spiralLineSpacing = getRangeValue(shapeData.lineSpacing ?? 1) * pixelRatio;
        particle.spiralWidthFactor = getRangeValue(shapeData.widthFactor ?? 10);
    }
}
