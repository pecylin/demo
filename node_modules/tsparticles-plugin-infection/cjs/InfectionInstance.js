"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InfectionInstance = void 0;
const tsparticles_engine_1 = require("tsparticles-engine");
const Infecter_1 = require("./Infecter");
class InfectionInstance {
    constructor(container) {
        this._container = container;
        this._container.infecter = new Infecter_1.Infecter(this._container);
    }
    particleFillColor(particle) {
        const options = this._container.actualOptions;
        if (!particle.infection || !options.infection) {
            return;
        }
        const infectionStage = particle.infection.stage, infection = options.infection, infectionStages = infection.stages;
        return infectionStage !== undefined ? infectionStages[infectionStage].color : undefined;
    }
    particleStrokeColor(particle) {
        return this.particleFillColor(particle);
    }
    particlesSetup() {
        const options = this._container.actualOptions;
        if (!options.infection) {
            return;
        }
        for (let i = 0; i < options.infection.infections; i++) {
            const notInfected = this._container.particles.filter((p) => {
                const infP = p;
                if (!infP.infection) {
                    infP.infection = {};
                }
                return infP.infection.stage === undefined;
            });
            const infected = (0, tsparticles_engine_1.itemFromArray)(notInfected);
            this._container.infecter?.startInfection(infected, 0);
        }
    }
}
exports.InfectionInstance = InfectionInstance;
